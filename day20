#! /usr/local/bin/python3

INPUT_FILE = f'{__file__}.input'
TEST_FILE = 'test.input'

def parse(file):
  with open(file) as input:
    algorithm, image = input.read().split('\n\n')
    image = tuple(list(line) for line in image.split('\n'))
    return algorithm, image

def get(image, i, j):
  if i >= 0 and i < len(image) and j >= 0 and j < len(image[0]):
    return image[i][j]
  return '.'

def square(i, j):
  return [
    (i-1, j-1),
    (i-1, j),
    (i-1, j+1),
    (i, j-1),
    (i, j),
    (i, j+1),
    (i+1, j-1),
    (i+1, j),
    (i+1, j+1),
  ]

def print_out(image):
  print('\n'.join(''.join(line) for line in image))

def index_for_pixel(image, i, j):
  string = ''.join('0' if get(image, ni, nj) == '.' else '1' for ni, nj in square(i,j))
  return int(string, 2)

test_image = [['#', '.', '.', '#', '.'], ['#', '.', '.', '.', '.'], ['#', '#', '.', '.', '#'], ['.', '.', '#', '.', '.'], ['.', '.', '#', '#', '#']]
assert index_for_pixel(test_image, 2, 2) == 34
assert index_for_pixel(test_image, 0, 0) == 18

def enhance(algorithm, image, margin=60):
  result = []
  for i in range(-margin, len(image) + margin):
    row = []
    for j in range(-margin, len(image[0]) + margin):
      cell = algorithm[index_for_pixel(image, i, j)]
      row.append(cell)
    result.append(row)
  return result

def lit_pixels(image):
  count = 0
  for row in image:
    for cell in row:
      if cell == '#':
        count +=1
  return count

def trim_image(image, margin):
  new_image = []
  for i in range(margin, len(image) - margin):
    row = []
    for j in range(margin, len(image[0]) - margin):
      row.append(get(image, i, j))
    new_image.append(row)
  return new_image

def process_part_1(input):
  algorithm, image = input
  image = enhance(algorithm, image, 20)
  image = enhance(algorithm, image, 20)
  image = trim_image(image, 38)
  return lit_pixels(image)

def process_part_2(input):
  algorithm, image = input
  for _ in range(25):
    image = enhance(algorithm, image, 20)
    image = enhance(algorithm, image, 20)
    image = trim_image(image, 38)
  return lit_pixels(image)

assert process_part_1(parse(TEST_FILE)) == 35
assert process_part_2(parse(TEST_FILE)) == 3351

print(process_part_1(parse(INPUT_FILE)))
print(process_part_2(parse(INPUT_FILE)))